apiVersion: "v1"
kind: "Template"
metadata:
  name: "front-generator-s2i"
parameters:
  - name: FORGE_URL
    description: The URL of the FORGE backend
    value: http://generator-backend-default.192.168.64.75.xip.io/forge
    required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: front-generator
    name: front-generator
    namespace: default
    selfLink: /oapi/v1/namespaces/default/imagestreams/front-generator
  spec:
    dockerImageRepository: "docker.io/obsidiantoaster/front-generator"
  importPolicy:
    scheduled: true
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: front-generator
    name: front-generator
    selfLink: /oapi/v1/namespaces//deploymentconfigs/front-generator
  spec:
    replicas: 1
    selector:
      app: front-generator
      deploymentconfig: front-generator
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: front-generator
          deploymentconfig: front-generator
      spec:
        containers:
        - image: front-generator:latest
          imagePullPolicy: Always
          name: front-generator
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - front-generator
        from:
          kind: ImageStreamTag
          name: front-generator:latest
          namespace: default
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: front-generator
    name: front-generator
    selfLink: /api/v1/namespaces//services/front-generator
  spec:
    clusterIP:
    portalIP:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: front-generator
      deploymentconfig: front-generator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: front-generator
    name: front-generator
    selfLink: /oapi/v1/namespaces//routes/front-generator
  spec:
    host:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: front-generator
      weight: 100
  status:
    ingress:
