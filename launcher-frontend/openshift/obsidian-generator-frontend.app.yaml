apiVersion: v1
kind: Template
labels:
  template: generator-frontend
metadata:
  name: generator-frontend
  creationTimestamp: null
objects:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      service: generator-frontend
    name: generator-frontend
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"generator-backend","namespace":"","kind":"Service"}]'
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: generator-frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: generator-frontend
    generation: 1
  spec:
    replicas: 1
    selector:
      service: generator-frontend
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: generator-frontend
      spec:
        containers:
        - image: redhatdevelopers/generator-frontend:latest
          imagePullPolicy: Always
          name: generator-frontend
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: BACKEND_URI
            valueFrom:
              configMapKeyRef:
                name: frontend-config
                key: backend.uri
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            httpGet:
              path: /wizard
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /wizard
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: generator-frontend
  spec:
    to:
      kind: Service
      name: generator-frontend
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: frontend-config
    creationTimestamp: null
  data:
    backend.uri: ${BACKEND_URI}
parameters:
- name: BACKEND_URI
  description: Route to Obsidian Generator Backend
