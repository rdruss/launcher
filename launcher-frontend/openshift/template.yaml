kind: Template
apiVersion: v1
metadata:
  name: launchpad-frontend
  annotations:
    openshift.io/display-name: "Launchpad - Frontend"
    description: This application contains the Frontend web service
    tags: instant-app,launchpad
    iconClass: icon-shadowman
    template.openshift.io/long-description: This application contains the Frontend web service
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/openshiftio
    template.openshift.io/support-url: https://access.redhat.com
message: "The following service has been created in your project: launchpad-frontend.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshiftio"
labels:
  template: launchpad-frontend
parameters:
- name: LAUNCHPAD_FRONTEND_HOST
  displayName: Launchpad Frontend Host
  description: The host name where the Frontend Launchpad application can be reached.
    You have to deduce yourself as no meaningfull default value can be supplied.
    If you're running everything on a local OpenShift/minishift instance you can
    take a look at the default value displayed in this field and replace $PROJECTNAME
    with the actual name of the project you are adding this template to and also
    replace $HOSTNAMEORIP with the IP number of the OpenShift instance you are
    running this on. If you're running this on an external server the URL in this
    field should probably look somewhat like the URL you see in this page's address
    bar of your browser.
    Example value (launchpad-frontend-$PROJECTNAME.$HOSTNAMEORIP.nip.io)
  value:
  required: true
- name: IMAGE_TAG
  value: latest
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: launchpad-frontend
  spec:
    replicas: 1
    selector:
      service: launchpad-frontend
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: launchpad-frontend
      spec:
        containers:
        - image: launchpad-frontend:${IMAGE_TAG}
          imagePullPolicy: Always
          name: launchpad-frontend
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: LAUNCHPAD_BACKEND_URL
            value: https://${LAUNCHPAD_FRONTEND_HOST}
          - name: LAUNCHPAD_MISSIONCONTROL_URL
            value: wss://${LAUNCHPAD_FRONTEND_HOST}
          - name: LAUNCHPAD_KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                name: launchpad
                key: launchpad.keycloak.url
          - name: LAUNCHPAD_KEYCLOAK_REALM
            valueFrom:
              configMapKeyRef:
                name: launchpad
                key: launchpad.keycloak.realm
          - name: LAUNCHPAD_TRACKER_SEGMENT_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launchpad
                key: launchpad.tracker.segment.token
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            httpGet:
              path: /wizard
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /wizard
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: launchpad-frontend
    name: launchpad-frontend
    annotations:
      service.alpha.openshift.io/dependencies: "[{\"name\":\"launchpad-backend\",\"namespace\":\"\",\"kind\":\"Service\"},{\"name\":\"launchpad-missioncontrol\",\"namespace\":\"\",\"kind\":\"Service\"}]"
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: launchpad-frontend
    sessionAffinity: None
    type: ClusterIP
- kind: Route
  apiVersion: v1
  metadata:
    name: launchpad-frontend-main
  spec:
    host: ${LAUNCHPAD_FRONTEND_HOST}
    to:
      kind: Service
      name: launchpad-frontend
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- kind: Route
  apiVersion: v1
  metadata:
    name: launchpad-frontend-backend-rproxy
  spec:
    host: ${LAUNCHPAD_FRONTEND_HOST}
    path: /launchpad
    to:
      kind: Service
      name: launchpad-backend
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- kind: Route
  apiVersion: v1
  metadata:
    name: launchpad-frontend-missioncontrol-rproxy
  spec:
    host: ${LAUNCHPAD_FRONTEND_HOST}
    path: /status
    to:
      kind: Service
      name: launchpad-missioncontrol
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
