kind: Template
apiVersion: v1
metadata:
  name: fabric8-launcher
  annotations:
    openshift.io/display-name: "Fabric8 Launch (Frontend + Backend)"
    description: This application consists of the combination of Backend and Frontend services for Fabric8 Launch
    tags: instant-app,fabric8-launcher
    iconClass: icon-shadowman
    template.openshift.io/long-description: This application consists of the combination of Backend and Frontend services for Fabric8 Launch
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/fabric8-launcher
    template.openshift.io/support-url: https://access.redhat.com
message: "The following service(s) have been created in your project: launcher-backend, launcher-frontend.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/fabric8-launcher"
labels:
  template: launcher-header
  app: fabric8-launcher

parameters:
- name: LAUNCHPAD_MISSIONCONTROL_GITHUB_USERNAME
  displayName: Your GitHub username
  description: Your GitHub username (leave empty when using Keycloak)
- name: LAUNCHPAD_MISSIONCONTROL_GITHUB_TOKEN
  displayName: Your GitHub Mission Control access token
  description: Your GitHub Mission Control access token (leave empty when using Keycloak)
- name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL
  displayName: Target OpenShift API URL
  description: The base URL of the OpenShift API where the launched boosters
    should be created (ie. https://hostname[:port] or https://ipaddress[:port]).
    Leave the default value when targetting the same OpenShift/Minishift you are
    running this on
  value: https://openshift.default.svc.cluster.local
- name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL
  displayName: Target OpenShift Console URL
  description: The base URL of the OpenShift Console where the launched boosters
    should be created (ie. https://hostname[:port] or https://ipaddress[:port]).
    When targetting the same OpenShift/Minishift instance you are running this on you
    can most likely look at this page's address bar of your browser and copy the URL
    Example value (https://$HOSTNAMEORIP:8443)
  value:
- name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_USERNAME
  displayName: OpenShift user name
  description: OpenShift user (leave empty when using Keycloak)
  value: developer
- name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_PASSWORD
  displayName: OpenShift password
  description: OpenShift password (leave empty when using Keycloak)  
  value: developer
- name: LAUNCHPAD_KEYCLOAK_URL
  displayName: KeyCloak URL
  description: The URL (with the /auth part) of a Keycloak installation to perform SSO
    authentication (leave empty if you've explicitly specified GItHub/OpenShift
    authentication above)
  value: https://sso.openshift.io/auth
- name: LAUNCHPAD_KEYCLOAK_REALM
  displayName: KeyCloak Realm
  description: The keycloak realm to be used (leave empty if you've explicitly specified
    GitHub/OpenShift authentication above)
  value: rh-developers-launch
- name: LAUNCHPAD_TRACKER_SEGMENT_TOKEN
  displayName: Segment Token
  description: The token to use for Segment tracking. Leaving this empty will disable
    tracking. This must be set to the proper tokens for staging and production!
- name: LAUNCHPAD_BACKEND_CATALOG_GIT_REPOSITORY
  displayName: Catalog Git Repository
  description: The GitHub repository containing the booster catalog
  value: https://github.com/fabric8-launcher/launcher-booster-catalog.git
  required: true
- name: LAUNCHPAD_BACKEND_CATALOG_GIT_REF
  displayName: Catalog Git Reference
  description: The Git reference to use for the above repository
  value: master
  required: true
- name: LAUNCHPAD_BACKEND_CATALOG_REINDEX_TOKEN
  displayName: Catalog Reindex Token
  description: A token that must be passed to the catalog reindex service to trigger the catalog
    reindexing.
  value:
- name: BACKEND_IMAGE
  value: fabric8/launcher-backend
  required: true
- name: BACKEND_IMAGE_TAG
  value: latest
  required: true
- name: FRONTEND_IMAGE
  value: fabric8/launcher-frontend
  required: true
- name: FRONTEND_IMAGE_TAG
  value: latest
  required: true
- name: CONTROLLER_IMAGE
  value: fabric8/configmapcontroller
  required: true
- name: CONTROLLER_IMAGE_TAG
  value: 2.3.7
  required: true
objects:
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: launcher
  data:
    launcher.missioncontrol.github.username: ${LAUNCHPAD_MISSIONCONTROL_GITHUB_USERNAME}
    launcher.missioncontrol.github.token: ${LAUNCHPAD_MISSIONCONTROL_GITHUB_TOKEN}
    launcher.missioncontrol.openshift.username: ${LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_USERNAME}
    launcher.missioncontrol.openshift.password: ${LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_PASSWORD}
    launcher.missioncontrol.openshift.api.url: ${LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL}
    launcher.missioncontrol.openshift.console.url: ${LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL}
    launcher.backend.catalog.git.repository: ${LAUNCHPAD_BACKEND_CATALOG_GIT_REPOSITORY}
    launcher.backend.catalog.git.ref: ${LAUNCHPAD_BACKEND_CATALOG_GIT_REF}
    launcher.backend.catalog.reindex.token: ${LAUNCHPAD_BACKEND_CATALOG_REINDEX_TOKEN}
    launcher.keycloak.url: ${LAUNCHPAD_KEYCLOAK_URL}
    launcher.keycloak.realm: ${LAUNCHPAD_KEYCLOAK_REALM}
    launcher.tracker.segment.token: ${LAUNCHPAD_TRACKER_SEGMENT_TOKEN}
    launcher.backend.url: /launch/api
    launcher.missioncontrol.url: /launch
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: launcher-clusters
  data:
    openshift-clusters.yaml: |-
      - id: starter-us-east-1
        apiUrl: https://api.starter-us-east-1.openshift.com
        consoleUrl: https://console.starter-us-east-1.openshift.com
      - id: starter-us-west-1
        apiUrl: https://api.starter-us-west-1.openshift.com
        consoleUrl: https://console.starter-us-west-1.openshift.com
      - id: starter-us-west-2
        apiUrl: https://api.starter-us-west-2.openshift.com
        consoleUrl: https://console.starter-us-west-2.openshift.com
      - id: starter-ca-central-1
        apiUrl: https://api.starter-ca-central-1.openshift.com
        consoleUrl: https://console.starter-ca-central-1.openshift.com
      - id: pro-us-east-1
        apiUrl: https://api.pro-us-east-1.openshift.com
        consoleUrl: https://console.pro-us-east-1.openshift.com
      - id: pro-eu-west-1
        apiUrl: https://api.pro-eu-west-1.openshift.com
        consoleUrl: https://console.pro-eu-west-1.openshift.com
      - id: pro-ap-southeast-2
        apiUrl: https://api.pro-ap-southeast-2.openshift.com
        consoleUrl: https://console.pro-ap-southeast-2.openshift.com

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: launcher-backend
    annotations:
      configmap.fabric8.io/update-on-change: "launcher,launcher-clusters"
  spec:
    replicas: 1
    selector:
      service: launcher-backend
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: launcher-backend
      spec:
        containers:
        - env:
          - name: LAUNCHPAD_BACKEND_CATALOG_GIT_REPOSITORY
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.git.repository
          - name: LAUNCHPAD_BACKEND_CATALOG_GIT_REF
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.git.ref
          - name: LAUNCHPAD_BACKEND_CATALOG_REINDEX_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.reindex.token
          - name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.api.url
          - name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.console.url
          - name: LAUNCHPAD_MISSIONCONTROL_GITHUB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.github.username
          - name: LAUNCHPAD_MISSIONCONTROL_GITHUB_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.github.token
          - name: LAUNCHPAD_KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.url
          - name: LAUNCHPAD_KEYCLOAK_REALM
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.realm
          - name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.username
          - name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.password
          - name: LAUNCHPAD_TRACKER_SEGMENT_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.tracker.segment.token
          - name: LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CLUSTERS_FILE
            value: /etc/openshift-clusters.yaml
          - name: LAUNCHPAD_MISSIONCONTROL_SERVICE_HOST
            value: localhost
          image: ${BACKEND_IMAGE}:${BACKEND_IMAGE_TAG}
          imagePullPolicy: Always
          name: launcher-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/openshift-clusters.yaml
            subPath: openshift-clusters.yaml
            name: configmap-volume
          readinessProbe:
            httpGet:
              path: /api/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 10
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: configmap-volume
          configMap:
            name: launcher-clusters
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: launcher-backend
    name: launcher-backend
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: launcher-backend
    sessionAffinity: None
    type: ClusterIP
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: launcher-frontend
    annotations:
      configmap.fabric8.io/update-on-change: "launcher"
  spec:
    replicas: 1
    selector:
      service: launcher-frontend
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: launcher-frontend
      spec:
        containers:
        - image: ${FRONTEND_IMAGE}:${FRONTEND_IMAGE_TAG}
          imagePullPolicy: Always
          name: launcher-frontend
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: LAUNCHPAD_BACKEND_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.url
          - name: LAUNCHPAD_MISSIONCONTROL_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.url
          - name: LAUNCHPAD_KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.url
          - name: LAUNCHPAD_KEYCLOAK_REALM
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.realm
          - name: LAUNCHPAD_TRACKER_SEGMENT_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.tracker.segment.token
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            httpGet:
              path: /launch/wizard
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /launch/wizard
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 20
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: launcher-frontend
    name: launcher-frontend
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: launcher-frontend
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      service: configmapcontroller
    name: configmapcontroller
- apiVersion: v1
  kind: RoleBinding
  metadata:
    labels:
      service: configmapcontroller
    name: configmapcontroller-edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: configmapcontroller
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: configmapcontroller
    name: configmapcontroller
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      service: configmapcontroller
    strategy:
      rollingParams:
        timeoutSeconds: 7200
      type: Rolling
    template:
      metadata:
        labels:
          service: configmapcontroller
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ${CONTROLLER_IMAGE}:${CONTROLLER_IMAGE_TAG}
          name: configmapcontroller
        serviceAccountName: configmapcontroller
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Route
  metadata:
    name: launcher-frontend
  spec:
    to:
      kind: Service
      name: launcher-frontend
      weight: 100
    wildcardPolicy: None
  status: {}

