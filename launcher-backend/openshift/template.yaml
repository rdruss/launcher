kind: Template
apiVersion: v1
metadata:
  name: launchpad-backend
  annotations:
    openshift.io/display-name: "Launchpad - Backend"
    description: This application contains the Backend service
    tags: instant-app,launchpad
    iconClass: icon-shadowman
    template.openshift.io/long-description: This application contains the Backend service
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/openshiftio/launchpad-backend
    template.openshift.io/support-url: https://access.redhat.com
message: "The following service has been created in your project: launchpad-backend.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshiftio"
labels:
  template: launchpad-backend
parameters:
- name: IMAGE
  value: openshiftio/launchpad-backend
  required: true
- name: IMAGE_TAG
  value: latest
  required: true
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: launchpad-backend
  spec:
    replicas: 1
    selector:
      service: launchpad-backend
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: launchpad-backend
      spec:
        containers:
        - env:
          - name: LAUNCHPAD_BACKEND_CATALOG_GIT_REPOSITORY
            valueFrom:
              configMapKeyRef:
                name: launchpad
                key: launchpad.backend.catalog.git.repository
          - name: LAUNCHPAD_BACKEND_CATALOG_GIT_REF
            valueFrom:
              configMapKeyRef:
                name: launchpad
                key: launchpad.backend.catalog.git.ref
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: launchpad-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: launchpad-backend
    name: launchpad-backend
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: launchpad-backend
    sessionAffinity: None
    type: ClusterIP
- kind: Route
  apiVersion: v1
  metadata:
    name: launchpad-backend
  spec:
    to:
      kind: Service
      name: launchpad-backend
      weight: 100
    wildcardPolicy: None
