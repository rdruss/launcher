kind: Template
apiVersion: v1
metadata:
  name: launcher-backend
  annotations:
    openshift.io/display-name: "Fabric8 Launcher - Backend"
    description: This application contains the Backend service for the Launcher
    tags: instant-app,fabric8-launcher
    iconClass: icon-shadowman
    template.openshift.io/long-description: This application contains the Backend service
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/fabric8-launcher/launcher-backend
    template.openshift.io/support-url: https://access.redhat.com
message: "The following service has been created in your project: launcher-backend.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/fabric8-launcher"
labels:
  template: launcher-backend
parameters:
- name: IMAGE
  value: fabric8/launcher-backend
  required: true

- name: IMAGE_TAG
  value: latest
  required: true

- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "10m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "1000m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "768Mi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "2G"

- description: Number of deployment replicas
  displayName: Number of deployment replicas
  required: true
  name: REPLICAS
  value: "1"

objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: launcher-backend
    annotations:
      configmap.fabric8.io/update-on-change: "launcher,launcher-clusters"
  spec:
    replicas: "${{REPLICAS}}"
    selector:
      service: launcher-backend
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: launcher-backend
      spec:
        containers:
        - env:
          - name: ARTEMIS_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.artemis.url
                optional: true
          - name: ARTEMIS_USERNAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.artemis.username
                optional: true
          - name: ARTEMIS_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.artemis.password
                optional: true
          - name: LAUNCHER_BOOSTER_CATALOG_REPOSITORY
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.git.repository
          - name: LAUNCHER_BOOSTER_CATALOG_REF
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.git.ref
          - name: LAUNCHER_BOOSTER_CATALOG_FILTER
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.filter
                optional: true
          - name: LAUNCHER_BACKEND_CATALOG_REINDEX_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.reindex.token
                optional: true
          - name: LAUNCHER_BACKEND_DOCUMENTATION_RELOAD_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.documentation.reload.token
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_API_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.api.url
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.console.url
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.username
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.password
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_GITHUB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.github.username
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_GITHUB_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.github.token
                optional: true
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.sentry.dsn
                optional: true
          - name: LAUNCHER_KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.url
          - name: LAUNCHER_KEYCLOAK_REALM
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.realm
          - name: LAUNCHER_TRACKER_SEGMENT_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.tracker.segment.token
          - name: LAUNCHER_BACKEND_ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.environment
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CLUSTERS_FILE
            value: /etc/fabric8-launcher/openshift-clusters.yaml
          - name: KEYCLOAK_SAAS_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: osio.keycloak.saas.url
          - name: OPENSHIFT_API_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: osio.openshift.api.url
          - name: WIT_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: osio.wit.url
                optional: true
          - name: AUTH_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: osio.auth.url
                optional: true
          - name: JENKINS_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: osio.jenkins.url
                optional: true
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: launcher-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/fabric8-launcher/
            name: configmap-volume
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 10
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: configmap-volume
          configMap:
            name: launcher-clusters
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: launcher-backend
    name: launcher-backend
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: launcher-backend
    sessionAffinity: None
    type: ClusterIP
