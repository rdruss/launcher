#!/bin/bash

## create a docker network for our app if it doesn't exist
#if ! docker network ls | grep -q launchernw; then docker network create launchernw; fi

# remove any pre-existing image
docker rm -f backend 2>&1 >/dev/null

# build the image
echo "Building image..."
docker build -q -t fabric8/launcher-backend -f Dockerfile.deploy .

# run it
echo "Running image..."
docker run \
    --name backend \
    -t \
    -p8080:8080 \
    -eLAUNCHPAD_KEYCLOAK_URL=$LAUNCHPAD_KEYCLOAK_URL \
    -eLAUNCHPAD_KEYCLOAK_REALM=$LAUNCHPAD_KEYCLOAK_REALM \
    -eLAUNCHPAD_MISSIONCONTROL_GITHUB_USERNAME=$LAUNCHPAD_MISSIONCONTROL_GITHUB_USERNAME \
    -eLAUNCHPAD_MISSIONCONTROL_GITHUB_TOKEN=$LAUNCHPAD_MISSIONCONTROL_GITHUB_TOKEN \
    -eLAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL=$LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL \
    -eLAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL=$LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL \
    -eLAUNCHPAD_MISSIONCONTROL_OPENSHIFT_USERNAME=$LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_USERNAME \
    -eLAUNCHPAD_MISSIONCONTROL_OPENSHIFT_PASSWORD=$LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_PASSWORD \
    -eLAUNCHPAD_MISSIONCONTROL_OPENSHIFT_TOKEN=$LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_TOKEN \
    -eLAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CLUSTERS_FILE=$LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CLUSTERS_FILE \
    -eLAUNCHPAD_MISSIONCONTROL_SERVICE_HOST=$LAUNCHPAD_MISSIONCONTROL_SERVICE_HOST \
    -eLAUNCHPAD_MISSIONCONTROL_SERVICE_PORT=$LAUNCHPAD_MISSIONCONTROL_SERVICE_PORT \
    -eLAUNCHPAD_BACKEND_CATALOG_GIT_REPOSITORY=$LAUNCHPAD_BACKEND_CATALOG_GIT_REPOSITORY \
    -eLAUNCHPAD_BACKEND_CATALOG_GIT_REF=$LAUNCHPAD_BACKEND_CATALOG_GIT_REF \
    -eLAUNCHPAD_TRACKER_SEGMENT_TOKEN=$LAUNCHPAD_TRACKER_SEGMENT_TOKEN \
    $1 \
    fabric8/launcher-backend

